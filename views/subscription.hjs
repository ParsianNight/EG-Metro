<!DOCTYPE html>
<html>
<head>
   <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css" />
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Raleway" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />
  <title>Subscription Payment</title>
  <style>
 body,h1 {
      font-family: "Raleway", sans-serif;
    }
    body, html {
      height: 100%;
    }
    .profile p {
  font-size: 24px;
  margin-bottom: 10px;
  color: #ffffff; /* lighter color for tags */
}
.profile span {
  font-size: 24px;
  margin-bottom: 10px;
  color: #999797; /* darker color for data */
}
    .bgimg {
     
      min-height: 100%;
      background-position: center;
      background-size: cover;
      
    }
    body {
  font-family: "Raleway", sans-serif;
  background-image: url('images/Wallpaper5.jpg');
  background-position: center;
  background-size: cover;
  backdrop-filter: blur(8px);
   padding: 50px;
}
 nav {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  width: 100%;
  color: #fff;
  padding: 20px;
  line-height: 1.5;
  backdrop-filter: blur(10px);
  z-index: 999; /* Add z-index value */
  font-size: 20px;
  background-color: rgba(0, 0, 0, 0.2);
}
    .nav-links {
      list-style: none;
      margin: 0;
      padding: 0;
    }
    .nav-links li:last-child {
      float: right;
    }
    .nav-links li {
      display: inline-block;
      margin-right: 20px;
    }
    .nav-links li a {
      color: #fff;
      text-decoration: none;
    }
    .cta-btn {
      background-color: #fff;
      color: #333;
      border: none;
      padding: 10px 20px;
      border-radius: 5px;
      font-size: 16px;
      margin-top: 20px;
      transition: background-color 0.3s ease;
    }
    .cta-btn:hover {
      background-color: #333;
      color: #fff;
      cursor: pointer;
    }
    /* Additional styles for the dashboard */
    .dashboard {
      padding: 100px 20px;
      text-align: center;
    }
    .dashboard h2 {
      font-size: 48px;
      margin-bottom: 40px;
    }
    .dashboard p {
      font-size: 24px;
      margin-bottom: 20px;
    }
    /* Styles for the profile section */
    .profile {
      margin-top: 50px;
      text-align: left;
    }
    .profile h3 {
      font-size: 36px;
      margin-bottom: 20px;
    }
    .profile p {
      font-size: 24px;
      margin-bottom: 10px;
    }
     .dropdown {
    position: relative;
    display: inline-block;
  }
  .dropdown-content {
    display: none;
    position: absolute;
    z-index: 1;
    background-color: rgba(0, 0, 0, 0.8);
    min-width: 200px;
  }
  @media screen and (max-width: 768px) {
  .dropdown-content {
    min-width: 100%; /* set width to 100% */
    left: 0; /* align menu to the left */
    box-shadow: none; /* remove box shadow */
  }
}
  .dropdown:hover .dropdown-content {
    display: block;
  }
  .dropbtn {
    color: white;
    text-decoration: none;
  }
  .dropdown-content a {
    color: black;
    padding: 12px 16px;
    text-decoration: none;
    display: block;
  }
  .dropdown-content a:hover {
    background-color: #b3b3b3;
  }
    
form {
    max-width: 400px;
    /* margin: 0 auto; */
    margin-left: 210px;
    margin-top: 60px;
    background-color: #fff;
    padding: 20px;
    border-radius: 5px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);

}

input[type="text"],
input[type="number"],
select {
  width: 100%;
  padding: 8px;
  font-size: 16px;
  border: 1px solid #ccc;
  border-radius: 4px;
  box-sizing: border-box;
  margin-bottom: 10px;
}

input[type="submit"] {
  background-color: #4CAF50;
  color: #fff;
  padding: 10px 20px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 16px;
}

input[type="submit"]:hover {
  background-color: #45a049;
}

.error-message {
  color: red;
  margin-top: 10px;
}

.success-message {
  color: green;
  margin-top: 10px;
}

.container {
  max-width: 600px;
  padding: 20px;
  background-color: #fff;
  border-radius: 5px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}
.container {
    right: 500px;
    width: 400px;
    margin-right: auto;
    margin-right: 307px;
    margin-left: 651px;
    margin-top: -388px;
}

table {
  width: 100%;
  border-collapse: collapse;
}

th, td {
  padding: 10px;
  text-align: left;
  border-bottom: 1px solid #ddd;
}

th {
  background-color: #f5f5f5;
}

.station-name-input,
.station-type-input {
  width: 100%;
  padding: 5px;
}

.station-name-input {
  display: none;
}

#message {
  margin-top: 20px;
  color: green;
  text-align: center;
}
  </style>
  


</head>
<body>

 <nav>
  <ul class="nav-links">
    <li><a href="/">Home</a></li>
    <li><a href="AboutUs">About Us</a></li> 
    <li class="dropdown">
      <a href="#" class="dropbtn">Services</a>
      <div class="dropdown-content">
        <a href="/subscriptions">Subscriptions</a>
        <a href="/tickets">Tickets</a>
        <a href="/prices">Prices</a>
        <a href="/rides/simulate">Rides</a>
        <a href="/requests/refund">Request Refund</a>
        <a href="/requests/senior">Request Senior</a>
        <a href="/myrequsets">My Requsets</a>
        <a href="/subscriptions/show">My Subscriptions</a>
      </div>
    </li>
    
   <li class="dropdown">
  <a href="#" class="dropbtn"><i class="fa fa-user"></i> {{firstname}} {{lastname}}</a>
  <div class="dropdown-content">
    <a href="dashboard">Settings</a>
    <a href="resetPassword">Reset Password</a>
    <a href="/logout">Logout</a>
  </div>
</li>
    
  </ul>
</nav>

 <form id="subscriptionForm">
   

<label for="creditCardNumber">Credit Card Number:</label>
<input type="text" id="creditCardNumber" name="creditCardNumber" required>

<label for="holderName">Card Holder Name:</label>
<input type="text" id="holderName" name="holderName" required>

<label for="payedAmount">Amount Paid:</label>
<input type="number" id="payedAmount" name="payedAmount" required>

<label for="subType">Subscription Type:</label>
<select id="subType" name="subType" required>
  <option value="annual">Annual</option>
  <option value="month">Monthly</option>
  <option value="quarterly">Quarterly</option>
</select>

<label for="zoneId">Zone ID:</label>
<input type="text" id="zoneId" name="zoneId" required>

<input type="submit" value="Submit">
<p class="error-message" id="errorMessage"></p>
<p class="success-message" id="successMessage"></p>
  </form>
 <div class="container">
    <h1>Zones</h1>
    <table>
      <thead>
        <tr>
          <th>Zone ID</th>
          <th>Zone Type</th>
          <th>Price</th>
        </tr>
      </thead>
      <tbody id="zonesTableBody">
      </tbody>
    </table>
    <p id="message"></p>
  </div>

  <script>
    document.getElementById("subscriptionForm").addEventListener("submit", async function(event) {
      event.preventDefault();

      const form = event.target;
      const data = {
        creditCardNumber: form.elements["creditCardNumber"].value,
        holderName: form.elements["holderName"].value,
        payedAmount: form.elements["payedAmount"].value,
        subType: form.elements["subType"].value,
        zoneId: form.elements["zoneId"].value
      };

      try {
        const response = await fetch("/api/v1/payment/subscription", {
          method: "POST",
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify(data)
        });

        const result = await response.json();

        if (response.ok) {
          // Subscription successful
          document.getElementById("successMessage").textContent = result.message;
          document.getElementById("errorMessage").textContent = "";
          form.reset();
        } else {
          // Error occurred
          document.getElementById("errorMessage").textContent = result.error;
          document.getElementById("successMessage").textContent = "";
        }
      } catch (error) {
        // Network or server error
        console.error("Error:", error);
        document.getElementById("errorMessage").textContent = "An error occurred. Please try again later.";
        document.getElementById("successMessage").textContent = "";
      }
    });

    async function fetchZones() {
      try {
        const response = await fetch("/api/v1/zones");
        const zones = await response.json();

        if (response.ok) {
          const zonesTableBody = document.getElementById("zonesTableBody");

          zones.forEach(zone => {
            const row = document.createElement("tr");

            const zoneId = document.createElement("td");
            zoneId.textContent = zone.id;
            row.appendChild(zoneId);

            const zoneType = document.createElement("td");
            zoneType.innerHTML = `<span class="station-name">${zone.zonetype}</span>`;
            row.appendChild(zoneType);

            const price = document.createElement("td");
            price.innerHTML = `<span class="station-type">${zone.price}</span>`;
            row.appendChild(price);

            zonesTableBody.appendChild(row);
          });
        } else {
          document.getElementById("message").textContent = "Failed to fetch zones.";
        }
      } catch (error) {
        console.error("Error:", error);
        document.getElementById("message").textContent = "An error occurred. Please try again later.";
      }
    }

    fetchZones();
  </script>
</body>
</html>


